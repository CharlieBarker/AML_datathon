// nextflow.config

// General settings
manifest {
    name = 'AML Survival Analysis'
    author = 'Charlie Barker'
    version = '1.0.0'
    description = 'A Nextflow pipeline for AML patient stratification and survival analysis.'
    mainScript = 'main.nf'
}

// Default parameters (can be overridden on the command line)
params {
    // These paths are relative to the directory where you run 'nextflow run'.
    // Your collaborator just needs to put the Data/ and Results/ (initial inputs)
    // in the same directory as the main.nf script.
    data_input_dir = "${baseDir}/Data"
    results_output_dir = "${baseDir}/results"
    project_base_dir = "${baseDir}" // baseDir is a Nextflow built-in that points to the pipeline's root directory
}

// Executor settings (e.g., local, slurm, awsbatch)
// For local execution, no specific executor config is usually needed beyond 'process.container'
process {
    // Enable Docker for reproducibility
    container = 'aml-analysis-r:latest'
    // If singularity is preferred (e.g., on HPC systems):
    // container = 'docker://aml-analysis-r:latest' // Nextflow converts docker images to singularity by default if singularity is installed
    // If you need more resources per task:
    // cpus = 2
    // memory = '4GB'
    // time = '2h'
}

// Profiles for different execution environments (optional, but good for collaborators)
profiles {
    standard {
        // Default profile, uses settings from 'process {}' block
    }
    high_mem {
        process.memory = '8GB'
        process.cpus = 4
    }
    // You could add a 'conda' profile if you prefer conda over docker
    // conda {
    //     process.container = null // Disable docker for this profile
    //     conda.enabled = true
    //     conda.cacheDir = "${baseDir}/.conda"
    //     process.conda = "${baseDir}/environment.yml"
    // }
}

// Where Nextflow stores temporary working files
workDir = "${baseDir}/work"

// Reporting options
report {
    enabled = true
    file = "${params.results_output_dir}/pipeline_report.html"
}
trace {
    enabled = true
    file = "${params.results_output_dir}/pipeline_trace.txt"
}
timeline {
    enabled = true
    file = "${params.results_output_dir}/pipeline_timeline.html"
}
